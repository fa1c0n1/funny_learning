!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
APPEND_INDENT	.\parson.c	721;"	d	file:
APPEND_INDENT	.\parson.c	882;"	d	file:
APPEND_STRING	.\parson.c	716;"	d	file:
APPEND_STRING	.\parson.c	881;"	d	file:
ARRAY_MAX_CAPACITY	.\parson.c	38;"	d	file:
CMD_LOGIN_REQ	.\imsdk.h	/^    CMD_LOGIN_REQ = 0,\/\/登陆$/;"	e	enum:IMSDK_COMMAND
CMD_LOGIN_RSP	.\imsdk.h	/^    CMD_LOGIN_RSP,\/\/登陆返回$/;"	e	enum:IMSDK_COMMAND
CMD_SEND_REQ	.\imsdk.h	/^    CMD_SEND_REQ,\/\/发送消息$/;"	e	enum:IMSDK_COMMAND
CMD_SEND_RSPS	.\imsdk.h	/^    CMD_SEND_RSPS\/\/消息返回$/;"	e	enum:IMSDK_COMMAND
DEVICE_ANDROID	.\imsdk.h	/^    DEVICE_ANDROID,$/;"	e	enum:IMSDK_DEVICE
DEVICE_INVALID	.\imsdk.h	/^    DEVICE_INVALID = -1,$/;"	e	enum:IMSDK_DEVICE
DEVICE_IOS	.\imsdk.h	/^    DEVICE_IOS,$/;"	e	enum:IMSDK_DEVICE
DEVICE_MAC	.\imsdk.h	/^    DEVICE_MAC$/;"	e	enum:IMSDK_DEVICE
DEVICE_WINDOWS	.\imsdk.h	/^    DEVICE_WINDOWS,$/;"	e	enum:IMSDK_DEVICE
DOUBLE_SERIALIZATION_FORMAT	.\parson.c	41;"	d	file:
DYAD_EVENT_ACCEPT	.\dyad.h	/^  DYAD_EVENT_ACCEPT,$/;"	e	enum:__anon5
DYAD_EVENT_CLOSE	.\dyad.h	/^  DYAD_EVENT_CLOSE,$/;"	e	enum:__anon5
DYAD_EVENT_CONNECT	.\dyad.h	/^  DYAD_EVENT_CONNECT,$/;"	e	enum:__anon5
DYAD_EVENT_DATA	.\dyad.h	/^  DYAD_EVENT_DATA,$/;"	e	enum:__anon5
DYAD_EVENT_DESTROY	.\dyad.h	/^  DYAD_EVENT_DESTROY,$/;"	e	enum:__anon5
DYAD_EVENT_ERROR	.\dyad.h	/^  DYAD_EVENT_ERROR,$/;"	e	enum:__anon5
DYAD_EVENT_LINE	.\dyad.h	/^  DYAD_EVENT_LINE,$/;"	e	enum:__anon5
DYAD_EVENT_LISTEN	.\dyad.h	/^  DYAD_EVENT_LISTEN,$/;"	e	enum:__anon5
DYAD_EVENT_NULL	.\dyad.h	/^  DYAD_EVENT_NULL,$/;"	e	enum:__anon5
DYAD_EVENT_READY	.\dyad.h	/^  DYAD_EVENT_READY,$/;"	e	enum:__anon5
DYAD_EVENT_TICK	.\dyad.h	/^  DYAD_EVENT_TICK$/;"	e	enum:__anon5
DYAD_EVENT_TIMEOUT	.\dyad.h	/^  DYAD_EVENT_TIMEOUT,$/;"	e	enum:__anon5
DYAD_FLAG_READY	.\dyad.c	289;"	d	file:
DYAD_FLAG_WRITTEN	.\dyad.c	290;"	d	file:
DYAD_H	.\dyad.h	9;"	d
DYAD_STATE_CLOSED	.\dyad.h	/^  DYAD_STATE_CLOSED,$/;"	e	enum:__anon6
DYAD_STATE_CLOSING	.\dyad.h	/^  DYAD_STATE_CLOSING,$/;"	e	enum:__anon6
DYAD_STATE_CONNECTED	.\dyad.h	/^  DYAD_STATE_CONNECTED,$/;"	e	enum:__anon6
DYAD_STATE_CONNECTING	.\dyad.h	/^  DYAD_STATE_CONNECTING,$/;"	e	enum:__anon6
DYAD_STATE_LISTENING	.\dyad.h	/^  DYAD_STATE_LISTENING$/;"	e	enum:__anon6
DYAD_UNSIGNED_BIT	.\dyad.c	184;"	d	file:
DYAD_VERSION	.\dyad.c	41;"	d	file:
EWOULDBLOCK	.\dyad.c	52;"	d	file:
EWOULDBLOCK	.\dyad.c	53;"	d	file:
GetMethodId	.\jni_tools.c	/^jmethodID GetMethodId(JNIEnv *env, jclass cls, char *key, char *signature) {$/;"	f
GetObjectClass	.\jni_tools.c	/^jclass GetObjectClass(JNIEnv *env, jobject obj) {$/;"	f
IMSDK_COMMAND	.\imsdk.h	/^enum IMSDK_COMMAND\/\/消息类型$/;"	g
IMSDK_DEVICE	.\imsdk.h	/^enum IMSDK_DEVICE\/\/设备$/;"	g
IMSDK_JSON	.\imsdk.h	/^struct IMSDK_JSON {$/;"	s
IMSDK_MSGSCOPE	.\imsdk.h	/^enum IMSDK_MSGSCOPE\/\/单人或群发$/;"	g
IMSDK_STATUS	.\imsdk.h	/^enum IMSDK_STATUS\/\/状态$/;"	g
IMSDK_close	.\imsdk.c	/^void IMSDK_close()$/;"	f
IMSDK_connect	.\imsdk.c	/^void IMSDK_connect(const char *ip,uint16_t port)$/;"	f
IMSDK_isconn	.\imsdk.c	/^int IMSDK_isconn()$/;"	f
IMSDK_send	.\imsdk.c	/^void IMSDK_send(struct IMSDK_JSON *json)$/;"	f
IMSDK_setCallback	.\imsdk.c	/^void IMSDK_setCallback(onCallback conn, onCallback disconn, onCallback data,onCallback err)$/;"	f
INVALID_SOCKET	.\dyad.c	73;"	d	file:
IS_CONT	.\parson.c	54;"	d	file:
JNI_OnLoad	.\imsdk_jni.c	/^JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *vm, void *reserved) {$/;"	f
JNI_TOOLS_H	.\jni_tools.h	12;"	d
JSONArray	.\parson.h	/^    JSONArray   = 5,$/;"	e	enum:json_value_type
JSONBoolean	.\parson.h	/^    JSONBoolean = 6$/;"	e	enum:json_value_type
JSONError	.\parson.h	/^    JSONError   = -1,$/;"	e	enum:json_value_type
JSONFailure	.\parson.h	/^    JSONFailure = -1$/;"	e	enum:json_result_t
JSONNull	.\parson.h	/^    JSONNull    = 1,$/;"	e	enum:json_value_type
JSONNumber	.\parson.h	/^    JSONNumber  = 3,$/;"	e	enum:json_value_type
JSONObject	.\parson.h	/^    JSONObject  = 4,$/;"	e	enum:json_value_type
JSONString	.\parson.h	/^    JSONString  = 2,$/;"	e	enum:json_value_type
JSONSuccess	.\parson.h	/^    JSONSuccess = 0,$/;"	e	enum:json_result_t
JSON_Array	.\parson.h	/^typedef struct json_array_t  JSON_Array;$/;"	t	typeref:struct:json_array_t
JSON_Free_Function	.\parson.h	/^typedef void   (*JSON_Free_Function)(void *);$/;"	t
JSON_Malloc_Function	.\parson.h	/^typedef void * (*JSON_Malloc_Function)(size_t);$/;"	t
JSON_Object	.\parson.h	/^typedef struct json_object_t JSON_Object;$/;"	t	typeref:struct:json_object_t
JSON_Status	.\parson.h	/^typedef int JSON_Status;$/;"	t
JSON_Value	.\parson.h	/^typedef struct json_value_t  JSON_Value;$/;"	t	typeref:struct:json_value_t
JSON_Value_Type	.\parson.h	/^typedef int JSON_Value_Type;$/;"	t
JSON_Value_Value	.\parson.c	/^} JSON_Value_Value;$/;"	t	typeref:union:json_value_value	file:
Java_com_laixou_imsdk_IMSdk_close	.\imsdk_jni.c	/^JNIEXPORT void JNICALL Java_com_laixou_imsdk_IMSdk_close(JNIEnv *env, jobject obj) {$/;"	f
Java_com_laixou_imsdk_IMSdk_connect	.\imsdk_jni.c	/^JNIEXPORT void JNICALL Java_com_laixou_imsdk_IMSdk_connect(JNIEnv *env, jobject obj, jstring ipStr,$/;"	f
Java_com_laixou_imsdk_IMSdk_isConn	.\imsdk_jni.c	/^JNIEXPORT jint JNICALL Java_com_laixou_imsdk_IMSdk_isConn(JNIEnv *env, jobject obj) {$/;"	f
Java_com_laixou_imsdk_IMSdk_send	.\imsdk_jni.c	/^JNIEXPORT void JNICALL Java_com_laixou_imsdk_IMSdk_send(JNIEnv *env, jobject obj, jobject msg) {$/;"	f
Java_com_laixou_imsdk_IMSdk_setCallback	.\imsdk_jni.c	/^JNIEXPORT void JNICALL Java_com_laixou_imsdk_IMSdk_setCallback(JNIEnv *env, jobject obj,$/;"	f
LOCAL_LDLIBS	.\Android.mk	/^LOCAL_LDLIBS := \\$/;"	m
LOCAL_MODULE	.\Android.mk	/^LOCAL_MODULE := imSDK$/;"	m
LOCAL_PATH	.\Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SRC_FILES	.\Android.mk	/^LOCAL_SRC_FILES := \\$/;"	m
LOGD	.\jni_tools.h	15;"	d
LOGE	.\jni_tools.h	18;"	d
LOGF	.\jni_tools.h	19;"	d
LOGI	.\jni_tools.h	16;"	d
LOGW	.\jni_tools.h	17;"	d
Listener	.\dyad.c	/^} Listener;$/;"	t	typeref:struct:__anon3	file:
MAX	.\parson.c	46;"	d	file:
MAX_NESTING	.\parson.c	40;"	d	file:
MSGSCOPE_GROUP	.\imsdk.h	/^    MSGSCOPE_GROUP$/;"	e	enum:IMSDK_MSGSCOPE
MSGSCOPE_SINGLE	.\imsdk.h	/^    MSGSCOPE_SINGLE = 0,$/;"	e	enum:IMSDK_MSGSCOPE
OBJECT_MAX_CAPACITY	.\parson.c	39;"	d	file:
SELECT_EXCEPT	.\dyad.c	/^  SELECT_EXCEPT,$/;"	e	enum:__anon1	file:
SELECT_MAX	.\dyad.c	/^  SELECT_MAX$/;"	e	enum:__anon1	file:
SELECT_READ	.\dyad.c	/^  SELECT_READ,$/;"	e	enum:__anon1	file:
SELECT_WRITE	.\dyad.c	/^  SELECT_WRITE,$/;"	e	enum:__anon1	file:
SIZEOF_TOKEN	.\parson.c	43;"	d	file:
SKIP_CHAR	.\parson.c	44;"	d	file:
SKIP_WHITESPACES	.\parson.c	45;"	d	file:
STARTING_CAPACITY	.\parson.c	37;"	d	file:
STATUS_CHK_FAILED	.\imsdk.h	/^    STATUS_CHK_FAILED,$/;"	e	enum:IMSDK_STATUS
STATUS_FORMAT_FAILED	.\imsdk.h	/^    STATUS_FORMAT_FAILED,$/;"	e	enum:IMSDK_STATUS
STATUS_LOGIN_FAILED	.\imsdk.h	/^    STATUS_LOGIN_FAILED,$/;"	e	enum:IMSDK_STATUS
STATUS_SERVICE_BUSY	.\imsdk.h	/^    STATUS_SERVICE_BUSY$/;"	e	enum:IMSDK_STATUS
STATUS_SUCCESS	.\imsdk.h	/^    STATUS_SUCCESS = 0,$/;"	e	enum:IMSDK_STATUS
STATUS_UNLOGIN	.\imsdk.h	/^    STATUS_UNLOGIN,$/;"	e	enum:IMSDK_STATUS
SelectSet	.\dyad.c	/^} SelectSet;$/;"	t	typeref:struct:__anon2	file:
TAG	.\jni_tools.h	14;"	d
Vec	.\dyad.c	122;"	d	file:
_CRT_SECURE_NO_WARNINGS	.\dyad.c	11;"	d	file:
_CRT_SECURE_NO_WARNINGS	.\parson.c	25;"	d	file:
_DARWIN_UNLIMITED_SELECT	.\dyad.c	19;"	d	file:
_IPADDR	.\imsdk.c	/^struct _IPADDR$/;"	s	file:
_Included_com_laixou_imsdk_IMSdk	.\imsdk_jni.h	7;"	d
_POSIX_C_SOURCE	.\dyad.c	17;"	d	file:
_WIN32_WINNT	.\dyad.c	9;"	d	file:
_callback	.\imsdk_jni.c	/^static jobject _callback;$/;"	v	file:
_conn	.\imsdk.c	/^onCallback _conn = NULL;$/;"	v
_data	.\imsdk.c	/^onCallback _data = NULL;$/;"	v
_disconn	.\imsdk.c	/^onCallback _disconn = NULL;$/;"	v
_err	.\imsdk.c	/^onCallback _err = NULL;$/;"	v
_sing	.\imsdk_jni.c	/^char *_sing = "()V";$/;"	v
address	.\dyad.c	/^  char *address;$/;"	m	struct:dyad_Stream	file:
append_indent	.\parson.c	/^static int append_indent(char *buf, int level) {$/;"	f	file:
append_string	.\parson.c	/^static int append_string(char *buf, const char *string) {$/;"	f	file:
array	.\parson.c	/^    JSON_Array  *array;$/;"	m	union:json_value_value	file:
base64_decode	.\stringx.h	/^char* base64_decode(char *b64src) $/;"	f
base64_encode	.\stringx.h	/^char* base64_encode(char *clrstr) $/;"	f
body	.\http-client-c.h	/^	char *body;$/;"	m	struct:http_response
body	.\imsdk.h	/^    char body[512];\/\/消息内容$/;"	m	struct:IMSDK_JSON
boolean	.\parson.c	/^    int          boolean;$/;"	m	union:json_value_value	file:
bytesReceived	.\dyad.c	/^  int bytesSent, bytesReceived;$/;"	m	struct:dyad_Stream	file:
bytesSent	.\dyad.c	/^  int bytesSent, bytesReceived;$/;"	m	struct:dyad_Stream	file:
callback	.\dyad.c	/^  dyad_Callback callback;$/;"	m	struct:__anon3	file:
capacity	.\dyad.c	/^  int capacity;$/;"	m	struct:__anon2	file:
capacity	.\parson.c	/^    size_t       capacity;$/;"	m	struct:json_array_t	file:
capacity	.\parson.c	/^    size_t       capacity;$/;"	m	struct:json_object_t	file:
charArrToJstring	.\jni_tools.c	/^jstring charArrToJstring(JNIEnv *env, const char *pat) {$/;"	f
chk	.\imsdk.h	/^    char chk[32];\/\/校验码$/;"	m	struct:IMSDK_JSON
close	.\dyad.c	45;"	d	file:
cmd	.\imsdk.h	/^    uint32_t cmd;\/\/消息类型$/;"	m	struct:IMSDK_JSON
count	.\parson.c	/^    size_t       count;$/;"	m	struct:json_array_t	file:
count	.\parson.c	/^    size_t       count;$/;"	m	struct:json_object_t	file:
createEvent	.\dyad.c	/^static dyad_Event createEvent(int type) {$/;"	f	file:
data	.\dyad.h	/^  char *data;$/;"	m	struct:__anon4
decodeblock	.\stringx.h	/^void decodeblock(unsigned char in[], char *clrstr) $/;"	f
destroyClosedStreams	.\dyad.c	/^static void destroyClosedStreams(void) {$/;"	f	file:
device	.\imsdk.h	/^    uint8_t device;\/\/设备$/;"	m	struct:IMSDK_JSON
dyad_Callback	.\dyad.h	/^typedef void (*dyad_Callback)(dyad_Event*);$/;"	t
dyad_Event	.\dyad.h	/^} dyad_Event;$/;"	t	typeref:struct:__anon4
dyad_PanicCallback	.\dyad.h	/^typedef void (*dyad_PanicCallback)(const char*);$/;"	t
dyad_Socket	.\dyad.h	/^typedef SOCKET dyad_Socket;$/;"	t
dyad_Socket	.\dyad.h	/^typedef int dyad_Socket;$/;"	t
dyad_Stream	.\dyad.c	/^struct dyad_Stream {$/;"	s	file:
dyad_Stream	.\dyad.h	/^typedef struct dyad_Stream dyad_Stream;$/;"	t	typeref:struct:dyad_Stream
dyad_addListener	.\dyad.c	/^void dyad_addListener($/;"	f
dyad_atPanic	.\dyad.c	/^dyad_PanicCallback dyad_atPanic(dyad_PanicCallback func) {$/;"	f
dyad_close	.\dyad.c	/^void dyad_close(dyad_Stream *stream) {$/;"	f
dyad_connect	.\dyad.c	/^int dyad_connect(dyad_Stream *stream, const char *host, int port) {$/;"	f
dyad_end	.\dyad.c	/^void dyad_end(dyad_Stream *stream) {$/;"	f
dyad_free	.\dyad.c	/^static void dyad_free(void *ptr) {$/;"	f	file:
dyad_getAddress	.\dyad.c	/^const char *dyad_getAddress(dyad_Stream *stream) {$/;"	f
dyad_getBytesReceived	.\dyad.c	/^int dyad_getBytesReceived(dyad_Stream *stream) {$/;"	f
dyad_getBytesSent	.\dyad.c	/^int dyad_getBytesSent(dyad_Stream *stream) {$/;"	f
dyad_getPort	.\dyad.c	/^int dyad_getPort(dyad_Stream *stream) {$/;"	f
dyad_getSocket	.\dyad.c	/^dyad_Socket dyad_getSocket(dyad_Stream *stream) {$/;"	f
dyad_getState	.\dyad.c	/^int dyad_getState(dyad_Stream *stream) {$/;"	f
dyad_getStreamCount	.\dyad.c	/^int dyad_getStreamCount(void) {$/;"	f
dyad_getTime	.\dyad.c	/^double dyad_getTime(void) {$/;"	f
dyad_getVersion	.\dyad.c	/^const char *dyad_getVersion(void) {$/;"	f
dyad_init	.\dyad.c	/^void dyad_init(void) {$/;"	f
dyad_lastTick	.\dyad.c	/^static double dyad_lastTick = 0;$/;"	v	file:
dyad_listen	.\dyad.c	/^int dyad_listen(dyad_Stream *stream, int port) {$/;"	f
dyad_listenEx	.\dyad.c	/^int dyad_listenEx($/;"	f
dyad_newStream	.\dyad.c	/^dyad_Stream *dyad_newStream(void) {$/;"	f
dyad_panicMsgBuffer	.\dyad.c	/^static char dyad_panicMsgBuffer[128];$/;"	v	file:
dyad_realloc	.\dyad.c	/^static void *dyad_realloc(void *ptr, int n) {$/;"	f	file:
dyad_removeAllListeners	.\dyad.c	/^void dyad_removeAllListeners(dyad_Stream *stream, int event) {$/;"	f
dyad_removeListener	.\dyad.c	/^void dyad_removeListener($/;"	f
dyad_selectSet	.\dyad.c	/^static SelectSet dyad_selectSet;$/;"	v	file:
dyad_setNoDelay	.\dyad.c	/^void dyad_setNoDelay(dyad_Stream *stream, int opt) {$/;"	f
dyad_setTickInterval	.\dyad.c	/^void dyad_setTickInterval(double seconds) {$/;"	f
dyad_setTimeout	.\dyad.c	/^void dyad_setTimeout(dyad_Stream *stream, double seconds) {$/;"	f
dyad_setUpdateTimeout	.\dyad.c	/^void dyad_setUpdateTimeout(double seconds) {$/;"	f
dyad_shutdown	.\dyad.c	/^void dyad_shutdown(void) {$/;"	f
dyad_streamCount	.\dyad.c	/^static int dyad_streamCount;$/;"	v	file:
dyad_streams	.\dyad.c	/^static dyad_Stream *dyad_streams;$/;"	v	file:
dyad_tickInterval	.\dyad.c	/^static double dyad_tickInterval = 1;$/;"	v	file:
dyad_update	.\dyad.c	/^void dyad_update(void) {$/;"	f
dyad_updateTimeout	.\dyad.c	/^static double dyad_updateTimeout = 1;$/;"	v	file:
dyad_vwritef	.\dyad.c	/^void dyad_vwritef(dyad_Stream *stream, const char *fmt, va_list args) {$/;"	f
dyad_write	.\dyad.c	/^void dyad_write(dyad_Stream *stream, const void *data, int size) {$/;"	f
dyad_writef	.\dyad.c	/^void dyad_writef(dyad_Stream *stream, const char *fmt, ...) {$/;"	f
encodeblock	.\stringx.h	/^void encodeblock( unsigned char in[], char b64str[], int len ) $/;"	f
errno	.\dyad.c	49;"	d	file:
errno	.\dyad.c	50;"	d	file:
event	.\dyad.c	/^  int event;$/;"	m	struct:__anon3	file:
fds	.\dyad.c	/^  fd_set *fds[SELECT_MAX];$/;"	m	struct:__anon2	file:
flags	.\dyad.c	/^  int state, flags;$/;"	m	struct:dyad_Stream	file:
fragment	.\urlparser.h	/^    char *fragment;             \/* optional *\/$/;"	m	struct:parsed_url
free	.\parson.c	49;"	d	file:
getData	.\imsdk_jni.c	/^static void getData(char *msg) {$/;"	f	file:
getIMServerIPAddr	.\imsdk.c	/^static struct _IPADDR* getIMServerIPAddr(const char *ip, uint port)$/;"	f	file:
getIntFromObj	.\jni_tools.c	/^int getIntFromObj(JNIEnv *env, jobject obj, jclass objClass, char *key) {$/;"	f
getJNIEnv	.\imsdk_jni.c	/^JNIEnv *getJNIEnv(int *needsDetach) {$/;"	f
getStringFromObj	.\jni_tools.c	/^char *getStringFromObj(JNIEnv *env, jobject obj, jclass objClass, char *key) {$/;"	f
get_quoted_string	.\parson.c	/^static char * get_quoted_string(const char **string) {$/;"	f	file:
get_until	.\stringx.h	/^char* get_until(char *haystack, char *until)$/;"	f
getsockopt	.\dyad.c	46;"	d	file:
handle_redirect_get	.\http-client-c.h	/^struct http_response* handle_redirect_get(struct http_response* hresp, char* custom_headers)$/;"	f
handle_redirect_head	.\http-client-c.h	/^struct http_response* handle_redirect_head(struct http_response* hresp, char* custom_headers)$/;"	f
handle_redirect_post	.\http-client-c.h	/^struct http_response* handle_redirect_post(struct http_response* hresp, char* custom_headers, char *post_data)$/;"	f
host	.\urlparser.h	/^    char *host;                 \/* mandatory *\/$/;"	m	struct:parsed_url
hostname_to_ip	.\urlparser.h	/^char* hostname_to_ip(char *hostname)$/;"	f
http_get	.\http-client-c.h	/^struct http_response* http_get(char *url, char *custom_headers)$/;"	f
http_head	.\http-client-c.h	/^struct http_response* http_head(char *url, char *custom_headers)$/;"	f
http_options	.\http-client-c.h	/^struct http_response* http_options(char *url)$/;"	f
http_post	.\http-client-c.h	/^struct http_response* http_post(char *url, char *custom_headers, char *post_data)$/;"	f
http_req	.\http-client-c.h	/^struct http_response* http_req(char *http_headers, struct parsed_url *purl)$/;"	f
http_response	.\http-client-c.h	/^struct http_response$/;"	s
http_response_free	.\http-client-c.h	/^void http_response_free(struct http_response *hresp)$/;"	f
imsdk_h	.\imsdk.h	7;"	d
inet_ntop	.\dyad.c	/^  const char *inet_ntop(int af, const void *src, char *dst, socklen_t size) {$/;"	f
ip	.\imsdk.c	/^    char ip[32];$/;"	m	struct:_IPADDR	file:
ip	.\urlparser.h	/^	char *ip; 					\/* mandatory *\/$/;"	m	struct:parsed_url
is_decimal	.\parson.c	/^static int is_decimal(const char *string, size_t length) {$/;"	f	file:
is_scheme_char	.\urlparser.h	/^int is_scheme_char(int c)$/;"	f
is_utf16_hex	.\parson.c	/^static int is_utf16_hex(const unsigned char *s) {$/;"	f	file:
is_valid_utf8	.\parson.c	/^static int is_valid_utf8(const char *string, size_t string_len) {$/;"	f	file:
items	.\parson.c	/^    JSON_Value **items;$/;"	m	struct:json_array_t	file:
json_array	.\parson.c	/^JSON_Array * json_array  (const JSON_Value *value) {$/;"	f
json_array_add	.\parson.c	/^static JSON_Status json_array_add(JSON_Array *array, JSON_Value *value) {$/;"	f	file:
json_array_append_boolean	.\parson.c	/^JSON_Status json_array_append_boolean(JSON_Array *array, int boolean) {$/;"	f
json_array_append_null	.\parson.c	/^JSON_Status json_array_append_null(JSON_Array *array) {$/;"	f
json_array_append_number	.\parson.c	/^JSON_Status json_array_append_number(JSON_Array *array, double number) {$/;"	f
json_array_append_string	.\parson.c	/^JSON_Status json_array_append_string(JSON_Array *array, const char *string) {$/;"	f
json_array_append_value	.\parson.c	/^JSON_Status json_array_append_value(JSON_Array *array, JSON_Value *value) {$/;"	f
json_array_clear	.\parson.c	/^JSON_Status json_array_clear(JSON_Array *array) {$/;"	f
json_array_free	.\parson.c	/^static void json_array_free(JSON_Array *array) {$/;"	f	file:
json_array_get_array	.\parson.c	/^JSON_Array * json_array_get_array(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_boolean	.\parson.c	/^int json_array_get_boolean(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_count	.\parson.c	/^size_t json_array_get_count(const JSON_Array *array) {$/;"	f
json_array_get_number	.\parson.c	/^double json_array_get_number(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_object	.\parson.c	/^JSON_Object * json_array_get_object(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_string	.\parson.c	/^const char * json_array_get_string(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_value	.\parson.c	/^JSON_Value * json_array_get_value(const JSON_Array *array, size_t index) {$/;"	f
json_array_init	.\parson.c	/^static JSON_Array * json_array_init(void) {$/;"	f	file:
json_array_remove	.\parson.c	/^JSON_Status json_array_remove(JSON_Array *array, size_t ix) {$/;"	f
json_array_replace_boolean	.\parson.c	/^JSON_Status json_array_replace_boolean(JSON_Array *array, size_t i, int boolean) {$/;"	f
json_array_replace_null	.\parson.c	/^JSON_Status json_array_replace_null(JSON_Array *array, size_t i) {$/;"	f
json_array_replace_number	.\parson.c	/^JSON_Status json_array_replace_number(JSON_Array *array, size_t i, double number) {$/;"	f
json_array_replace_string	.\parson.c	/^JSON_Status json_array_replace_string(JSON_Array *array, size_t i, const char* string) {$/;"	f
json_array_replace_value	.\parson.c	/^JSON_Status json_array_replace_value(JSON_Array *array, size_t ix, JSON_Value *value) {$/;"	f
json_array_resize	.\parson.c	/^static JSON_Status json_array_resize(JSON_Array *array, size_t new_capacity) {$/;"	f	file:
json_array_t	.\parson.c	/^struct json_array_t {$/;"	s	file:
json_boolean	.\parson.c	/^int json_boolean(const JSON_Value *value) {$/;"	f
json_free_serialized_string	.\parson.c	/^void json_free_serialized_string(char *string) {$/;"	f
json_number	.\parson.c	/^double json_number (const JSON_Value *value) {$/;"	f
json_object	.\parson.c	/^JSON_Object * json_object (const JSON_Value *value) {$/;"	f
json_object_add	.\parson.c	/^static JSON_Status json_object_add(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f	file:
json_object_clear	.\parson.c	/^JSON_Status json_object_clear(JSON_Object *object) {$/;"	f
json_object_dotget_array	.\parson.c	/^JSON_Array * json_object_dotget_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_boolean	.\parson.c	/^int json_object_dotget_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_number	.\parson.c	/^double json_object_dotget_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_object	.\parson.c	/^JSON_Object * json_object_dotget_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_string	.\parson.c	/^const char * json_object_dotget_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_value	.\parson.c	/^JSON_Value * json_object_dotget_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotremove	.\parson.c	/^JSON_Status json_object_dotremove(JSON_Object *object, const char *name) {$/;"	f
json_object_dotset_boolean	.\parson.c	/^JSON_Status json_object_dotset_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f
json_object_dotset_null	.\parson.c	/^JSON_Status json_object_dotset_null(JSON_Object *object, const char *name) {$/;"	f
json_object_dotset_number	.\parson.c	/^JSON_Status json_object_dotset_number(JSON_Object *object, const char *name, double number) {$/;"	f
json_object_dotset_string	.\parson.c	/^JSON_Status json_object_dotset_string(JSON_Object *object, const char *name, const char *string) {$/;"	f
json_object_dotset_value	.\parson.c	/^JSON_Status json_object_dotset_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f
json_object_free	.\parson.c	/^static void json_object_free(JSON_Object *object) {$/;"	f	file:
json_object_get_array	.\parson.c	/^JSON_Array * json_object_get_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_boolean	.\parson.c	/^int json_object_get_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_count	.\parson.c	/^size_t json_object_get_count(const JSON_Object *object) {$/;"	f
json_object_get_name	.\parson.c	/^const char * json_object_get_name(const JSON_Object *object, size_t index) {$/;"	f
json_object_get_number	.\parson.c	/^double json_object_get_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_object	.\parson.c	/^JSON_Object * json_object_get_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_string	.\parson.c	/^const char * json_object_get_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_value	.\parson.c	/^JSON_Value * json_object_get_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_value_at	.\parson.c	/^JSON_Value * json_object_get_value_at(const JSON_Object *object, size_t index) {$/;"	f
json_object_init	.\parson.c	/^static JSON_Object * json_object_init(void) {$/;"	f	file:
json_object_nget_value	.\parson.c	/^static JSON_Value * json_object_nget_value(const JSON_Object *object, const char *name, size_t n) {$/;"	f	file:
json_object_remove	.\parson.c	/^JSON_Status json_object_remove(JSON_Object *object, const char *name) {$/;"	f
json_object_resize	.\parson.c	/^static JSON_Status json_object_resize(JSON_Object *object, size_t new_capacity) {$/;"	f	file:
json_object_set_boolean	.\parson.c	/^JSON_Status json_object_set_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f
json_object_set_null	.\parson.c	/^JSON_Status json_object_set_null(JSON_Object *object, const char *name) {$/;"	f
json_object_set_number	.\parson.c	/^JSON_Status json_object_set_number(JSON_Object *object, const char *name, double number) {$/;"	f
json_object_set_string	.\parson.c	/^JSON_Status json_object_set_string(JSON_Object *object, const char *name, const char *string) {$/;"	f
json_object_set_value	.\parson.c	/^JSON_Status json_object_set_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f
json_object_t	.\parson.c	/^struct json_object_t {$/;"	s	file:
json_parse_file	.\parson.c	/^JSON_Value * json_parse_file(const char *filename) {$/;"	f
json_parse_file_with_comments	.\parson.c	/^JSON_Value * json_parse_file_with_comments(const char *filename) {$/;"	f
json_parse_string	.\parson.c	/^JSON_Value * json_parse_string(const char *string) {$/;"	f
json_parse_string_with_comments	.\parson.c	/^JSON_Value * json_parse_string_with_comments(const char *string) {$/;"	f
json_result_t	.\parson.h	/^enum json_result_t {$/;"	g
json_serialization_size	.\parson.c	/^size_t json_serialization_size(const JSON_Value *value) {$/;"	f
json_serialization_size_pretty	.\parson.c	/^size_t json_serialization_size_pretty(const JSON_Value *value) {$/;"	f
json_serialize_string	.\parson.c	/^static int json_serialize_string(const char *string, char *buf) {$/;"	f	file:
json_serialize_to_buffer	.\parson.c	/^JSON_Status json_serialize_to_buffer(const JSON_Value *value, char *buf, size_t buf_size_in_bytes) {$/;"	f
json_serialize_to_buffer_pretty	.\parson.c	/^JSON_Status json_serialize_to_buffer_pretty(const JSON_Value *value, char *buf, size_t buf_size_in_bytes) {$/;"	f
json_serialize_to_buffer_r	.\parson.c	/^static int json_serialize_to_buffer_r(const JSON_Value *value, char *buf, int level, int is_pretty, char *num_buf)$/;"	f	file:
json_serialize_to_file	.\parson.c	/^JSON_Status json_serialize_to_file(const JSON_Value *value, const char *filename) {$/;"	f
json_serialize_to_file_pretty	.\parson.c	/^JSON_Status json_serialize_to_file_pretty(const JSON_Value *value, const char *filename) {$/;"	f
json_serialize_to_string	.\parson.c	/^char * json_serialize_to_string(const JSON_Value *value) {$/;"	f
json_serialize_to_string_pretty	.\parson.c	/^char * json_serialize_to_string_pretty(const JSON_Value *value) {$/;"	f
json_set_allocation_functions	.\parson.c	/^void json_set_allocation_functions(JSON_Malloc_Function malloc_fun, JSON_Free_Function free_fun) {$/;"	f
json_string	.\parson.c	/^const char * json_string (const JSON_Value *value) {$/;"	f
json_type	.\parson.c	/^JSON_Value_Type json_type(const JSON_Value *value) {$/;"	f
json_validate	.\parson.c	/^JSON_Status json_validate(const JSON_Value *schema, const JSON_Value *value) {$/;"	f
json_value_deep_copy	.\parson.c	/^JSON_Value * json_value_deep_copy(const JSON_Value *value) {$/;"	f
json_value_equals	.\parson.c	/^JSON_Status json_value_equals(const JSON_Value *a, const JSON_Value *b) {$/;"	f
json_value_free	.\parson.c	/^void json_value_free(JSON_Value *value) {$/;"	f
json_value_get_array	.\parson.c	/^JSON_Array * json_value_get_array(const JSON_Value *value) {$/;"	f
json_value_get_boolean	.\parson.c	/^int json_value_get_boolean(const JSON_Value *value) {$/;"	f
json_value_get_number	.\parson.c	/^double json_value_get_number(const JSON_Value *value) {$/;"	f
json_value_get_object	.\parson.c	/^JSON_Object * json_value_get_object(const JSON_Value *value) {$/;"	f
json_value_get_string	.\parson.c	/^const char * json_value_get_string(const JSON_Value *value) {$/;"	f
json_value_get_type	.\parson.c	/^JSON_Value_Type json_value_get_type(const JSON_Value *value) {$/;"	f
json_value_init_array	.\parson.c	/^JSON_Value * json_value_init_array(void) {$/;"	f
json_value_init_boolean	.\parson.c	/^JSON_Value * json_value_init_boolean(int boolean) {$/;"	f
json_value_init_null	.\parson.c	/^JSON_Value * json_value_init_null(void) {$/;"	f
json_value_init_number	.\parson.c	/^JSON_Value * json_value_init_number(double number) {$/;"	f
json_value_init_object	.\parson.c	/^JSON_Value * json_value_init_object(void) {$/;"	f
json_value_init_string	.\parson.c	/^JSON_Value * json_value_init_string(const char *string) {$/;"	f
json_value_init_string_no_copy	.\parson.c	/^static JSON_Value * json_value_init_string_no_copy(char *string) {$/;"	f	file:
json_value_t	.\parson.c	/^struct json_value_t {$/;"	s	file:
json_value_type	.\parson.h	/^enum json_value_type {$/;"	g
json_value_value	.\parson.c	/^typedef union json_value_value {$/;"	u	file:
jstringToCharArr	.\jni_tools.c	/^char *jstringToCharArr(JNIEnv *env, jstring str) {$/;"	f
lastActivity	.\dyad.c	/^  double lastActivity, timeout;$/;"	m	struct:dyad_Stream	file:
lineBuffer	.\dyad.c	/^  Vec(char) lineBuffer;$/;"	m	struct:dyad_Stream	file:
m_vm	.\imsdk_jni.c	/^JavaVM *m_vm;$/;"	v
malloc	.\parson.c	48;"	d	file:
maxfd	.\dyad.c	/^  dyad_Socket maxfd;$/;"	m	struct:__anon2	file:
msg	.\dyad.h	/^  const char *msg;$/;"	m	struct:__anon4
msgid	.\imsdk.h	/^    uint32_t msgid;\/\/userId$/;"	m	struct:IMSDK_JSON
msgscope	.\imsdk.h	/^    uint8_t msgscope;\/\/消息范围,单人或群发$/;"	m	struct:IMSDK_JSON
names	.\parson.c	/^    char       **names;$/;"	m	struct:json_object_t	file:
next	.\dyad.c	/^  dyad_Stream *next;$/;"	m	struct:dyad_Stream	file:
null	.\parson.c	/^    int          null;$/;"	m	union:json_value_value	file:
num_bytes_in_utf8_sequence	.\parson.c	/^static int num_bytes_in_utf8_sequence(unsigned char c) {$/;"	f	file:
number	.\parson.c	/^    double       number;$/;"	m	union:json_value_value	file:
object	.\parson.c	/^    JSON_Object *object;$/;"	m	union:json_value_value	file:
onCallback	.\imsdk.h	/^typedef void (* onCallback)(const char *);$/;"	t
onClose	.\imsdk.c	/^static void onClose(dyad_Event *e)$/;"	f	file:
onConnErr	.\imsdk_jni.c	/^static void onConnErr(char *msg) {$/;"	f	file:
onConnect	.\imsdk.c	/^static void onConnect(dyad_Event *e)$/;"	f	file:
onConnect	.\imsdk_jni.c	/^static void onConnect(char *msg) {$/;"	f	file:
onData	.\imsdk.c	/^static void onData(dyad_Event *e)$/;"	f	file:
onDisconn	.\imsdk_jni.c	/^static void onDisconn(char *msg) {$/;"	f	file:
onError	.\imsdk.c	/^static void onError(dyad_Event *e)$/;"	f	file:
panicCallback	.\dyad.c	/^static dyad_PanicCallback panicCallback;$/;"	v	file:
panic_	.\dyad.c	/^static void panic_(const char *fmt, ...) {$/;"	f	file:
parse_array_value	.\parson.c	/^static JSON_Value * parse_array_value(const char **string, size_t nesting) {$/;"	f	file:
parse_boolean_value	.\parson.c	/^static JSON_Value * parse_boolean_value(const char **string) {$/;"	f	file:
parse_null_value	.\parson.c	/^static JSON_Value * parse_null_value(const char **string) {$/;"	f	file:
parse_number_value	.\parson.c	/^static JSON_Value * parse_number_value(const char **string) {$/;"	f	file:
parse_object_value	.\parson.c	/^static JSON_Value * parse_object_value(const char **string, size_t nesting) {$/;"	f	file:
parse_string_value	.\parson.c	/^static JSON_Value * parse_string_value(const char **string) {$/;"	f	file:
parse_url	.\urlparser.h	/^struct parsed_url *parse_url(const char *url)$/;"	f
parse_utf_16	.\parson.c	/^static int parse_utf_16(const char **unprocessed, char **processed) {$/;"	f	file:
parse_value	.\parson.c	/^static JSON_Value * parse_value(const char **string, size_t nesting) {$/;"	f	file:
parsed_url	.\urlparser.h	/^struct parsed_url $/;"	s
parsed_url_free	.\urlparser.h	/^void parsed_url_free(struct parsed_url *purl)$/;"	f
parson_free	.\parson.c	/^static JSON_Free_Function parson_free = free;$/;"	v	file:
parson_malloc	.\parson.c	/^static JSON_Malloc_Function parson_malloc = malloc;$/;"	v	file:
parson_parson_h	.\parson.h	25;"	d
parson_strdup	.\parson.c	/^static char * parson_strdup(const char *string) {$/;"	f	file:
parson_strndup	.\parson.c	/^static char * parson_strndup(const char *string, size_t n) {$/;"	f	file:
password	.\urlparser.h	/^    char *password;             \/* optional *\/$/;"	m	struct:parsed_url
path	.\urlparser.h	/^    char *path;                 \/* optional *\/$/;"	m	struct:parsed_url
port	.\dyad.c	/^  int port;$/;"	m	struct:dyad_Stream	file:
port	.\imsdk.c	/^    uint port;$/;"	m	struct:_IPADDR	file:
port	.\urlparser.h	/^    char *port;                 \/* optional *\/$/;"	m	struct:parsed_url
process_string	.\parson.c	/^static char* process_string(const char *input, size_t len) {$/;"	f	file:
query	.\urlparser.h	/^    char *query;                \/* optional *\/$/;"	m	struct:parsed_url
read_file	.\parson.c	/^static char * read_file(const char * filename) {$/;"	f	file:
receiver	.\imsdk.h	/^    uint32_t receiver;\/\/接收人$/;"	m	struct:IMSDK_JSON
remote	.\dyad.h	/^  dyad_Stream *remote;$/;"	m	struct:__anon4
remove_comments	.\parson.c	/^static void remove_comments(char *string, const char *start_token, const char *end_token) {$/;"	f	file:
request_headers	.\http-client-c.h	/^	char *request_headers;$/;"	m	struct:http_response
request_uri	.\http-client-c.h	/^	struct parsed_url *request_uri;$/;"	m	struct:http_response	typeref:struct:http_response::parsed_url
response_headers	.\http-client-c.h	/^	char *response_headers;$/;"	m	struct:http_response
scheme	.\urlparser.h	/^    char *scheme;               \/* mandatory *\/$/;"	m	struct:parsed_url
select_add	.\dyad.c	/^static void select_add(SelectSet *s, int set, dyad_Socket fd) {$/;"	f	file:
select_deinit	.\dyad.c	/^static void select_deinit(SelectSet *s) {$/;"	f	file:
select_grow	.\dyad.c	/^static void select_grow(SelectSet *s) {$/;"	f	file:
select_has	.\dyad.c	/^static int select_has(SelectSet *s, int set, dyad_Socket fd) {$/;"	f	file:
select_zero	.\dyad.c	/^static void select_zero(SelectSet *s) {$/;"	f	file:
sender	.\imsdk.h	/^    uint32_t sender;\/\/发送人$/;"	m	struct:IMSDK_JSON
server	.\imsdk.c	/^dyad_Stream *server = NULL;$/;"	v
setsockopt	.\dyad.c	47;"	d	file:
size	.\dyad.h	/^  int size;$/;"	m	struct:__anon4
skip_quotes	.\parson.c	/^static void skip_quotes(const char **string) {$/;"	f	file:
sockfd	.\dyad.c	/^  dyad_Socket sockfd;$/;"	m	struct:dyad_Stream	file:
state	.\dyad.c	/^  int state, flags;$/;"	m	struct:dyad_Stream	file:
status	.\imsdk.h	/^    uint8_t status;\/\/消息状态$/;"	m	struct:IMSDK_JSON
status_code	.\http-client-c.h	/^	char *status_code;$/;"	m	struct:http_response
status_code_int	.\http-client-c.h	/^	int status_code_int;$/;"	m	struct:http_response
status_text	.\http-client-c.h	/^	char *status_text;$/;"	m	struct:http_response
str_cat	.\stringx.h	/^char* str_cat(char *a, char *b)$/;"	f
str_contains	.\stringx.h	/^int str_contains(const char *haystack, const char *needle)$/;"	f
str_dup	.\stringx.h	/^char *str_dup(const char *src)$/;"	f
str_index_of	.\stringx.h	/^int str_index_of(const char *a, char *b)$/;"	f
str_ndup	.\stringx.h	/^char *str_ndup (const char *str, size_t max)$/;"	f
str_replace	.\stringx.h	/^char *str_replace(char *search , char *replace , char *subject)$/;"	f
stream	.\dyad.h	/^  dyad_Stream *stream;$/;"	m	struct:__anon4
stream_acceptPendingConnections	.\dyad.c	/^static void stream_acceptPendingConnections(dyad_Stream *stream) {$/;"	f	file:
stream_destroy	.\dyad.c	/^static void stream_destroy(dyad_Stream *stream) {$/;"	f	file:
stream_emitEvent	.\dyad.c	/^static void stream_emitEvent(dyad_Stream *stream, dyad_Event *e) {$/;"	f	file:
stream_error	.\dyad.c	/^static void stream_error(dyad_Stream *stream, const char *msg, int err) {$/;"	f	file:
stream_flushWriteBuffer	.\dyad.c	/^static int stream_flushWriteBuffer(dyad_Stream *stream) {$/;"	f	file:
stream_handleReceivedData	.\dyad.c	/^static void stream_handleReceivedData(dyad_Stream *stream) {$/;"	f	file:
stream_hasListenerForEvent	.\dyad.c	/^static int stream_hasListenerForEvent(dyad_Stream *stream, int event) {$/;"	f	file:
stream_initAddress	.\dyad.c	/^static void stream_initAddress(dyad_Stream *stream) {$/;"	f	file:
stream_initSocket	.\dyad.c	/^static int stream_initSocket($/;"	f	file:
stream_setSocket	.\dyad.c	/^static void stream_setSocket(dyad_Stream *stream, dyad_Socket sockfd) {$/;"	f	file:
stream_setSocketNonBlocking	.\dyad.c	/^static void stream_setSocketNonBlocking(dyad_Stream *stream, int opt) {$/;"	f	file:
string	.\parson.c	/^    char        *string;$/;"	m	union:json_value_value	file:
timeout	.\dyad.c	/^  double lastActivity, timeout;$/;"	m	struct:dyad_Stream	file:
to_hex	.\stringx.h	/^char to_hex(char code) $/;"	f
token	.\imsdk.h	/^    char token[33];\/\/token$/;"	m	struct:IMSDK_JSON
trim_end	.\stringx.h	/^char* trim_end(char *string, char to_trim)$/;"	f
type	.\dyad.h	/^  int type;$/;"	m	struct:__anon4
type	.\parson.c	/^    JSON_Value_Type     type;$/;"	m	struct:json_value_t	file:
udata	.\dyad.c	/^  void *udata;$/;"	m	struct:__anon3	file:
udata	.\dyad.h	/^  void *udata;$/;"	m	struct:__anon4
updateStreamTimeouts	.\dyad.c	/^static void updateStreamTimeouts(void) {$/;"	f	file:
updateTickTimer	.\dyad.c	/^static void updateTickTimer(void) {$/;"	f	file:
uri	.\urlparser.h	/^	char *uri;					\/* mandatory *\/$/;"	m	struct:parsed_url
urlencode	.\stringx.h	/^char *urlencode(char *str) $/;"	f
username	.\urlparser.h	/^    char *username;             \/* optional *\/$/;"	m	struct:parsed_url
value	.\parson.c	/^    JSON_Value_Value    value;$/;"	m	struct:json_value_t	file:
values	.\parson.c	/^    JSON_Value **values;$/;"	m	struct:json_object_t	file:
vec_clear	.\dyad.c	138;"	d	file:
vec_deinit	.\dyad.c	134;"	d	file:
vec_expand	.\dyad.c	/^static void vec_expand(char **data, int *length, int *capacity, int memsz) {$/;"	f	file:
vec_init	.\dyad.c	130;"	d	file:
vec_push	.\dyad.c	142;"	d	file:
vec_splice	.\dyad.c	/^static void vec_splice($/;"	f	file:
vec_splice	.\dyad.c	147;"	d	file:
vec_unpack	.\dyad.c	126;"	d	file:
verify_utf8_sequence	.\parson.c	/^static int verify_utf8_sequence(const unsigned char *string, int *len) {$/;"	f	file:
version	.\imsdk.h	/^    char version[16];\/\/版本$/;"	m	struct:IMSDK_JSON
writeBuffer	.\dyad.c	/^  Vec(char) writeBuffer;$/;"	m	struct:dyad_Stream	file:
